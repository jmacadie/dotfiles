[user]
	name = James MacAdie
	email = j.macadie@ttg.co.uk
[core]
	editor = nvim
	pager = delta
[color]
	status = auto
	branch = auto
[push]
	default = simple
[alias]
	s = status
	l = log --pretty='format:%C(auto)%h %d %<|(120)%s %Cblue%aN, %ad' --date=format:'%a %Y-%m-%d %H:%I' --graph
	ll = "!f() { \
		comparison_branch=$( \
		    for branch in origin/development development origin/main main origin/master master; do \
			if git show-ref --verify --quiet refs/remotes/$branch || git show-ref --verify --quiet refs/heads/$branch; then \
			    echo $branch; \
			    break; \
			fi; \
		    done \
		); \
		if [ $# -eq 0 ]; then \
			a="@"; \
			b=$comparison_branch; \
		elif [ $# -eq 1 ]; then \
			a="@"; \
			b=$1; \
		else \
			a=$2; \
			b=$1; \
		fi; \
		root_commit=$(git rev-list $a --not $b --reverse | head -n 1); \
		git l ^$root_commit~2 $a $b; \
		}; f"
	a = add -i
	aa = add .
	d = diff
	ds = diff --staged
	dn = diff --stat
	c = commit
	co = checkout
	sw = switch
	b = branch
	bl = "!f() { \
		comparison_branch=$( \
		    for branch in origin/development development origin/main main origin/master master; do \
			if git show-ref --verify --quiet refs/remotes/$branch || git show-ref --verify --quiet refs/heads/$branch; then \
			    echo $branch; \
			    break; \
			fi; \
		    done \
		); \
		if [ -z \"$comparison_branch\" ]; then \
		    echo \"No reference branch found from the specified list.\" >&2; \
		    return 1; \
		fi; \
		echo \"  Branch                                   | Last Commit                               | Ahead / behind '$comparison_branch'\"; \
		echo \"  ---------------------------------------- | ----------------------------------------- | ---------------------------------\"; \
		git for-each-ref --sort=-committerdate --format=\"%(if)%(HEAD)%(then)* %(else)  %(end)%(if:equals=refs/remotes)%(refname:rstrip=-2)%(then)%(color:dim)%(end)%(align:40)%(refname:short)%(end)%(if:equals=refs/remotes)%(refname:rstrip=-2)%(then)%(color:reset)%(end) | %(align:21)%(committerdate:short) (%(objectname:short))%(end) %(align:20)%(authorname)%(end)| %(ahead-behind:$comparison_branch)\" refs/heads refs/remotes; \
		}; f"
	ps = push
	psf = push --force-with-lease
	pl = pull
	f = !git remote update origin --prune && git fetch --tags
	ff = merge --ff-only
	ld = log --patch
	logs = log --stat
	nuke = !git reset --hard && git clean -f -d
	unstage = reset HEAD --
[diff]
	colorMoved = default
	algorithm = histogram
[merge]
	conflictstyle = diff3
[difftool]
	prompt = false
	trustExitCode = true
[init]
	defaultBranch = main
[delta]
	#https://dandavison.github.io/delta/introduction.html
	navigate = true
	line-numbers = true
	side-by-side = true
	features = nord
[interactive]
	diffFilter = delta --color-only
[pull]
	ff = only
[rebase]
	autosquash = true
[rerere]
	enabled = true
